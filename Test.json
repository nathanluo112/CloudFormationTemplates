{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Basic CloudFormation template with ELB and Auto Scaling Group to create instances using nginx to host basic webpage.",
  "Parameters": {
    "InstanceType": {
        "Type" : "String",
        "Default" : "t2.micro",
        "AllowedValues" : ["t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
        "ConstraintDescription": "must be a valid EC2 instance type."  
    },
    
    "AmiId": {
        "Type": "String",
        "Default" : "ami-08111162",
        "ConstraintDescription": "must be a valid ami id"
    },
      
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "KeyPair name for accessing the ec2 instance",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup::GroupName"
    },
    
    "EnvironmentTag": {
      "Type": "String",
      "Default": "dev",
      "Description": "Environment tag"
    }
  },
  

  "Resources" : {
    "BasicELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": "BasicELB",
        "CrossZone": "true",
        "HealthCheck": {
          "HealthyThreshold": "5",
          "Interval": "10",
          "Target": "HTTP",
          "Timeout": "60",
          "UnhealthyThreshold": "2"
        },
        "Listeners": {
          "LoadBalancerPort": "80",
          "instanceport" : "80",
          "Protocol": "HTTP"
        },
        "AvailabilityZones" : { "Fn::GetAZs" : "" }
      }
    },
    
    "InstanceProfile": {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path": "/",
        "Roles" : ["S3-access"]
      }
    },
    
    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "Tags": [
            {"Key": "Name", "Value": "TestJsonStack"}
        ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : {"Ref": "AmiId"},
        "IamInstanceProfile": { "Ref" : "InstanceProfile" }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },
    
    "BasicLaunchConfig": {
        "Type" : "AWS::AutoScaling::LaunchConfiguration",
        "Properties" : {
            "AssociatePublicIpAddress": "true",

            "IamInstanceProfile": {"Ref": "InstanceProfile"},

            "InstanceType" : {"Ref": "InstanceType"},

            "ImageId" : {"Ref": "AmiId"},

            "KeyName" : {"Ref": "KeyName"},

            "SecurityGroups": [{"Ref": "SecurityGroup"}],

            "UserData" : { "Fn::Base64" : { "Fn::Join": ["", [
                "#!/bin/bash \n",
                "sudo yum update -y \n",
                "sudo yum install -y nginx \n",
                "sudo service nginx start \n"
                ]]} 
             }
        }
    }
  }
}
